This is pdfTeX, Version 3.14159265-2.6-1.40.20 (MiKTeX 2.9.7000 64-bit) (preloaded format=latex 2019.5.10)  8 OCT 2019 06:27
entering extended mode
**./CR_DM2.tex
(CR_DM2.tex
LaTeX2e <2018-12-01>
("B:\Program Files (x86)\Miktex 2.9\tex/latex/base\article.cls"
Document Class: article 2018/09/03 v1.4i Standard LaTeX document class
("B:\Program Files (x86)\Miktex 2.9\tex/latex/base\size10.clo"
File: size10.clo 2018/09/03 v1.4i Standard LaTeX file (size option)
)
\c@part=\count80
\c@section=\count81
\c@subsection=\count82
\c@subsubsection=\count83
\c@paragraph=\count84
\c@subparagraph=\count85
\c@figure=\count86
\c@table=\count87
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
("B:\Program Files (x86)\Miktex 2.9\tex/latex/base\inputenc.sty"
Package: inputenc 2018/08/11 v1.3c Input encoding file
\inpenc@prehook=\toks14
\inpenc@posthook=\toks15
)
("B:\Program Files (x86)\Miktex 2.9\tex/latex/geometry\geometry.sty"
Package: geometry 2018/04/16 v5.8 Page Geometry

("B:\Program Files (x86)\Miktex 2.9\tex/latex/graphics\keyval.sty"
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks16
)
("B:\Program Files (x86)\Miktex 2.9\tex/generic/oberdiek\ifpdf.sty"
Package: ifpdf 2018/09/07 v3.3 Provides the ifpdf switch
)
("B:\Program Files (x86)\Miktex 2.9\tex/generic/oberdiek\ifvtex.sty"
Package: ifvtex 2016/05/16 v1.6 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
)
("B:\Program Files (x86)\Miktex 2.9\tex/generic/ifxetex\ifxetex.sty"
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
\Gm@cnth=\count88
\Gm@cntv=\count89
\c@Gm@tempcnt=\count90
\Gm@bindingoffset=\dimen103
\Gm@wd@mp=\dimen104
\Gm@odd@mp=\dimen105
\Gm@even@mp=\dimen106
\Gm@layoutwidth=\dimen107
\Gm@layoutheight=\dimen108
\Gm@layouthoffset=\dimen109
\Gm@layoutvoffset=\dimen110
\Gm@dimlist=\toks17

("B:\Program Files (x86)\Miktex 2.9\tex/latex/geometry\geometry.cfg"))
("B:\Program Files (x86)\Miktex 2.9\tex/latex/a4wide\a4wide.sty"
Package: a4wide 1994/08/30

("B:\Program Files (x86)\Miktex 2.9\tex/latex/ntgclass\a4.sty"
Package: a4 2004/04/15 v1.2g A4 based page layout
))
("B:\Program Files (x86)\Miktex 2.9\tex/generic/babel\babel.sty"
Package: babel 2019/04/01 3.28 The Babel package

("B:\Program Files (x86)\Miktex 2.9\tex/generic/babel\switch.def"
File: switch.def 2019/04/01 3.28 Babel switching mechanism
)
*************************************
* Local config file bblopts.cfg used
*
("B:\Program Files (x86)\Miktex 2.9\tex/latex/arabi\bblopts.cfg"
File: bblopts.cfg 2005/09/08 v0.1 add Arabic and Farsi to "declared" options of
 babel
)
("B:\Program Files (x86)\Miktex 2.9\tex/generic/babel-french\francais.ldf"
Language: francais 2019/03/30 v3.5e French support from the babel system


Package francais.ldf Warning: Option `francais' for Babel is *deprecated*,
(francais.ldf)                it might be removed sooner or later. Please
(francais.ldf)                use `french' instead; reported on input line 31.

("B:\Program Files (x86)\Miktex 2.9\tex/generic/babel-french\french.ldf"
Language: french 2019/03/30 v3.5e French support from the babel system

("B:\Program Files (x86)\Miktex 2.9\tex/generic/babel\babel.def"
File: babel.def 2019/04/01 3.28 Babel common definitions
\babel@savecnt=\count91
\U@D=\dimen111

("B:\Program Files (x86)\Miktex 2.9\tex/generic/babel\txtbabel.def")
\bbl@dirlevel=\count92
)
\l@acadian = a dialect from \language\l@french 
\FB@nonchar=\count93
Package babel Info: Making : an active character on input line 414.
Package babel Info: Making ; an active character on input line 415.
Package babel Info: Making ! an active character on input line 416.
Package babel Info: Making ? an active character on input line 417.
\FBguill@level=\count94
\FBold@everypar=\toks18
\FB@Mht=\dimen112
\mc@charclass=\count95
\mc@charfam=\count96
\mc@charslot=\count97
\std@mcc=\count98
\dec@mcc=\count99
\c@FBcaption@count=\count100
\listindentFB=\dimen113
\descindentFB=\dimen114
\labelindentFB=\dimen115
\labelwidthFB=\dimen116
\leftmarginFB=\dimen117
\parindentFFN=\dimen118
\FBfnindent=\dimen119
)))
("B:\Program Files (x86)\Miktex 2.9\tex/latex/carlisle\scalefnt.sty")
("B:\Program Files (x86)\Miktex 2.9\tex/latex/inconsolata\inconsolata.sty"
Package: inconsolata 2019/05/17 v1.12

`inconsolata-zi4' v1.12, 2019/05/17 Text macros for Inconsolata (msharpe)
("B:\Program Files (x86)\Miktex 2.9\tex/latex/base\textcomp.sty"
Package: textcomp 2018/08/11 v2.0j Standard LaTeX package
Package textcomp Info: Sub-encoding information:
(textcomp)               5 = only ISO-Adobe without \textcurrency
(textcomp)               4 = 5 + \texteuro
(textcomp)               3 = 4 + \textohm
(textcomp)               2 = 3 + \textestimated + \textcurrency
(textcomp)               1 = TS1 - \textcircled - \t
(textcomp)               0 = TS1 (full)
(textcomp)             Font families with sub-encoding setting implement
(textcomp)             only a restricted character set as indicated.
(textcomp)             Family '?' is the default used for unknown fonts.
(textcomp)             See the documentation for details.
Package textcomp Info: Setting ? sub-encoding to TS1/1 on input line 79.

("B:\Program Files (x86)\Miktex 2.9\tex/latex/base\ts1enc.def"
File: ts1enc.def 2001/06/05 v3.0e (jk/car/fm) Standard LaTeX file
Now handling font encoding TS1 ...
... processing UTF-8 mapping file for font encoding TS1

("B:\Program Files (x86)\Miktex 2.9\tex/latex/base\ts1enc.dfu"
File: ts1enc.dfu 2018/10/05 v1.2f UTF-8 support for inputenc
   defining Unicode char U+00A2 (decimal 162)
   defining Unicode char U+00A3 (decimal 163)
   defining Unicode char U+00A4 (decimal 164)
   defining Unicode char U+00A5 (decimal 165)
   defining Unicode char U+00A6 (decimal 166)
   defining Unicode char U+00A7 (decimal 167)
   defining Unicode char U+00A8 (decimal 168)
   defining Unicode char U+00A9 (decimal 169)
   defining Unicode char U+00AA (decimal 170)
   defining Unicode char U+00AC (decimal 172)
   defining Unicode char U+00AE (decimal 174)
   defining Unicode char U+00AF (decimal 175)
   defining Unicode char U+00B0 (decimal 176)
   defining Unicode char U+00B1 (decimal 177)
   defining Unicode char U+00B2 (decimal 178)
   defining Unicode char U+00B3 (decimal 179)
   defining Unicode char U+00B4 (decimal 180)
   defining Unicode char U+00B5 (decimal 181)
   defining Unicode char U+00B6 (decimal 182)
   defining Unicode char U+00B7 (decimal 183)
   defining Unicode char U+00B9 (decimal 185)
   defining Unicode char U+00BA (decimal 186)
   defining Unicode char U+00BC (decimal 188)
   defining Unicode char U+00BD (decimal 189)
   defining Unicode char U+00BE (decimal 190)
   defining Unicode char U+00D7 (decimal 215)
   defining Unicode char U+00F7 (decimal 247)
   defining Unicode char U+0192 (decimal 402)
   defining Unicode char U+02C7 (decimal 711)
   defining Unicode char U+02D8 (decimal 728)
   defining Unicode char U+02DD (decimal 733)
   defining Unicode char U+0E3F (decimal 3647)
   defining Unicode char U+2016 (decimal 8214)
   defining Unicode char U+2020 (decimal 8224)
   defining Unicode char U+2021 (decimal 8225)
   defining Unicode char U+2022 (decimal 8226)
   defining Unicode char U+2030 (decimal 8240)
   defining Unicode char U+2031 (decimal 8241)
   defining Unicode char U+203B (decimal 8251)
   defining Unicode char U+203D (decimal 8253)
   defining Unicode char U+2044 (decimal 8260)
   defining Unicode char U+204E (decimal 8270)
   defining Unicode char U+2052 (decimal 8274)
   defining Unicode char U+20A1 (decimal 8353)
   defining Unicode char U+20A4 (decimal 8356)
   defining Unicode char U+20A6 (decimal 8358)
   defining Unicode char U+20A9 (decimal 8361)
   defining Unicode char U+20AB (decimal 8363)
   defining Unicode char U+20AC (decimal 8364)
   defining Unicode char U+20B1 (decimal 8369)
   defining Unicode char U+2103 (decimal 8451)
   defining Unicode char U+2116 (decimal 8470)
   defining Unicode char U+2117 (decimal 8471)
   defining Unicode char U+211E (decimal 8478)
   defining Unicode char U+2120 (decimal 8480)
   defining Unicode char U+2122 (decimal 8482)
   defining Unicode char U+2126 (decimal 8486)
   defining Unicode char U+2127 (decimal 8487)
   defining Unicode char U+212E (decimal 8494)
   defining Unicode char U+2190 (decimal 8592)
   defining Unicode char U+2191 (decimal 8593)
   defining Unicode char U+2192 (decimal 8594)
   defining Unicode char U+2193 (decimal 8595)
   defining Unicode char U+2329 (decimal 9001)
   defining Unicode char U+232A (decimal 9002)
   defining Unicode char U+2422 (decimal 9250)
   defining Unicode char U+25E6 (decimal 9702)
   defining Unicode char U+25EF (decimal 9711)
   defining Unicode char U+266A (decimal 9834)
   defining Unicode char U+FEFF (decimal 65279)
))
LaTeX Info: Redefining \oldstylenums on input line 334.
Package textcomp Info: Setting cmr sub-encoding to TS1/0 on input line 349.
Package textcomp Info: Setting cmss sub-encoding to TS1/0 on input line 350.
Package textcomp Info: Setting cmtt sub-encoding to TS1/0 on input line 351.
Package textcomp Info: Setting cmvtt sub-encoding to TS1/0 on input line 352.
Package textcomp Info: Setting cmbr sub-encoding to TS1/0 on input line 353.
Package textcomp Info: Setting cmtl sub-encoding to TS1/0 on input line 354.
Package textcomp Info: Setting ccr sub-encoding to TS1/0 on input line 355.
Package textcomp Info: Setting ptm sub-encoding to TS1/4 on input line 356.
Package textcomp Info: Setting pcr sub-encoding to TS1/4 on input line 357.
Package textcomp Info: Setting phv sub-encoding to TS1/4 on input line 358.
Package textcomp Info: Setting ppl sub-encoding to TS1/3 on input line 359.
Package textcomp Info: Setting pag sub-encoding to TS1/4 on input line 360.
Package textcomp Info: Setting pbk sub-encoding to TS1/4 on input line 361.
Package textcomp Info: Setting pnc sub-encoding to TS1/4 on input line 362.
Package textcomp Info: Setting pzc sub-encoding to TS1/4 on input line 363.
Package textcomp Info: Setting bch sub-encoding to TS1/4 on input line 364.
Package textcomp Info: Setting put sub-encoding to TS1/5 on input line 365.
Package textcomp Info: Setting uag sub-encoding to TS1/5 on input line 366.
Package textcomp Info: Setting ugq sub-encoding to TS1/5 on input line 367.
Package textcomp Info: Setting ul8 sub-encoding to TS1/4 on input line 368.
Package textcomp Info: Setting ul9 sub-encoding to TS1/4 on input line 369.
Package textcomp Info: Setting augie sub-encoding to TS1/5 on input line 370.
Package textcomp Info: Setting dayrom sub-encoding to TS1/3 on input line 371.
Package textcomp Info: Setting dayroms sub-encoding to TS1/3 on input line 372.

Package textcomp Info: Setting pxr sub-encoding to TS1/0 on input line 373.
Package textcomp Info: Setting pxss sub-encoding to TS1/0 on input line 374.
Package textcomp Info: Setting pxtt sub-encoding to TS1/0 on input line 375.
Package textcomp Info: Setting txr sub-encoding to TS1/0 on input line 376.
Package textcomp Info: Setting txss sub-encoding to TS1/0 on input line 377.
Package textcomp Info: Setting txtt sub-encoding to TS1/0 on input line 378.
Package textcomp Info: Setting lmr sub-encoding to TS1/0 on input line 379.
Package textcomp Info: Setting lmdh sub-encoding to TS1/0 on input line 380.
Package textcomp Info: Setting lmss sub-encoding to TS1/0 on input line 381.
Package textcomp Info: Setting lmssq sub-encoding to TS1/0 on input line 382.
Package textcomp Info: Setting lmvtt sub-encoding to TS1/0 on input line 383.
Package textcomp Info: Setting lmtt sub-encoding to TS1/0 on input line 384.
Package textcomp Info: Setting qhv sub-encoding to TS1/0 on input line 385.
Package textcomp Info: Setting qag sub-encoding to TS1/0 on input line 386.
Package textcomp Info: Setting qbk sub-encoding to TS1/0 on input line 387.
Package textcomp Info: Setting qcr sub-encoding to TS1/0 on input line 388.
Package textcomp Info: Setting qcs sub-encoding to TS1/0 on input line 389.
Package textcomp Info: Setting qpl sub-encoding to TS1/0 on input line 390.
Package textcomp Info: Setting qtm sub-encoding to TS1/0 on input line 391.
Package textcomp Info: Setting qzc sub-encoding to TS1/0 on input line 392.
Package textcomp Info: Setting qhvc sub-encoding to TS1/0 on input line 393.
Package textcomp Info: Setting futs sub-encoding to TS1/4 on input line 394.
Package textcomp Info: Setting futx sub-encoding to TS1/4 on input line 395.
Package textcomp Info: Setting futj sub-encoding to TS1/4 on input line 396.
Package textcomp Info: Setting hlh sub-encoding to TS1/3 on input line 397.
Package textcomp Info: Setting hls sub-encoding to TS1/3 on input line 398.
Package textcomp Info: Setting hlst sub-encoding to TS1/3 on input line 399.
Package textcomp Info: Setting hlct sub-encoding to TS1/5 on input line 400.
Package textcomp Info: Setting hlx sub-encoding to TS1/5 on input line 401.
Package textcomp Info: Setting hlce sub-encoding to TS1/5 on input line 402.
Package textcomp Info: Setting hlcn sub-encoding to TS1/5 on input line 403.
Package textcomp Info: Setting hlcw sub-encoding to TS1/5 on input line 404.
Package textcomp Info: Setting hlcf sub-encoding to TS1/5 on input line 405.
Package textcomp Info: Setting pplx sub-encoding to TS1/3 on input line 406.
Package textcomp Info: Setting pplj sub-encoding to TS1/3 on input line 407.
Package textcomp Info: Setting ptmx sub-encoding to TS1/4 on input line 408.
Package textcomp Info: Setting ptmj sub-encoding to TS1/4 on input line 409.
)
("B:\Program Files (x86)\Miktex 2.9\tex/latex/xkeyval\xkeyval.sty"
Package: xkeyval 2014/12/03 v2.7a package option processing (HA)

("B:\Program Files (x86)\Miktex 2.9\tex/generic/xkeyval\xkeyval.tex"
("B:\Program Files (x86)\Miktex 2.9\tex/generic/xkeyval\xkvutils.tex"
\XKV@toks=\toks19
\XKV@tempa@toks=\toks20
)
\XKV@depth=\count101
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
))
\zifour@ocount=\count102
)
("B:\Program Files (x86)\Miktex 2.9\tex/latex/graphics\color.sty"
Package: color 2016/07/10 v1.1e Standard LaTeX Color (DPC)

("B:\Program Files (x86)\Miktex 2.9\tex/latex/graphics-cfg\color.cfg"
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package color Info: Driver file: dvips.def on input line 147.

("B:\Program Files (x86)\Miktex 2.9\tex/latex/graphics-def\dvips.def"
File: dvips.def 2017/06/20 v3.1d Graphics/color driver for dvips
)
("B:\Program Files (x86)\Miktex 2.9\tex/latex/graphics\dvipsnam.def"
File: dvipsnam.def 2016/06/17 v3.0m Driver-dependent file (DPC,SPQR)
))
("B:\Program Files (x86)\Miktex 2.9\tex/latex/listings\listings.sty"
\lst@mode=\count103
\lst@gtempboxa=\box27
\lst@token=\toks21
\lst@length=\count104
\lst@currlwidth=\dimen120
\lst@column=\count105
\lst@pos=\count106
\lst@lostspace=\dimen121
\lst@width=\dimen122
\lst@newlines=\count107
\lst@lineno=\count108
\lst@maxwidth=\dimen123

("B:\Program Files (x86)\Miktex 2.9\tex/latex/listings\lstmisc.sty"
File: lstmisc.sty 2019/09/10 1.8c (Carsten Heinz)
\c@lstnumber=\count109
\lst@skipnumbers=\count110
\lst@framebox=\box28
)
("B:\Program Files (x86)\Miktex 2.9\tex/latex/listings\listings.cfg"
File: listings.cfg 2019/09/10 1.8c listings configuration
))
Package: listings 2019/09/10 1.8c (Carsten Heinz)

(CR_DM2.aux)
\openout1 = `CR_DM2.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 81.
LaTeX Font Info:    ... okay on input line 81.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 81.
LaTeX Font Info:    ... okay on input line 81.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 81.
LaTeX Font Info:    ... okay on input line 81.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 81.
LaTeX Font Info:    ... okay on input line 81.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 81.
LaTeX Font Info:    ... okay on input line 81.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 81.
LaTeX Font Info:    ... okay on input line 81.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 81.
LaTeX Font Info:    Try loading font information for TS1+cmr on input line 81.
 ("B:\Program Files (x86)\Miktex 2.9\tex/latex/base\ts1cmr.fd"
File: ts1cmr.fd 2014/09/29 v2.5h Standard LaTeX font definitions
)
LaTeX Font Info:    ... okay on input line 81.

*geometry* driver: auto-detecting
*geometry* detected driver: dvips
*geometry* verbose mode - [ preamble ] result:
* driver: dvips
* paper: <default>
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: 
* h-part:(L,W,R)=(56.9055pt, 500.484pt, 56.9055pt)
* v-part:(T,H,B)=(28.45274pt, 738.0645pt, 28.45274pt)
* \paperwidth=614.295pt
* \paperheight=794.96999pt
* \textwidth=424.58624pt
* \textheight=711.3189pt
* \oddsidemargin=18.06749pt
* \evensidemargin=18.06749pt
* \topmargin=-71.13188pt
* \headheight=12.0pt
* \headsep=25.0pt
* \topskip=10.0pt
* \footskip=30.0pt
* \marginparwidth=54.2025pt
* \marginparsep=11.0pt
* \columnsep=10.0pt
* \skip\footins=9.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

LaTeX Info: Redefining \degres on input line 81.
LaTeX Info: Redefining \dots on input line 81.
LaTeX Info: Redefining \up on input line 81.

Package french.ldf Warning: OT1 encoding should not be used for French.
(french.ldf)                Add \usepackage[T1]{fontenc} to the preamble
(french.ldf)                of your document; reported on input line 81.

("B:\Program Files (x86)\Miktex 2.9\tex/latex/upquote\upquote.sty"
Package: upquote 2012/04/19 v1.3 upright-quote and grave-accent glyphs in verba
tim
)
\c@lstlisting=\count111
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 99.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 99.

Overfull \hbox (0.72957pt too wide) in paragraph at lines 90--101
[]
 []


Overfull \hbox (1.63669pt too wide) in paragraph at lines 102--104
[]\OT1/cmr/m/n/10 Presenter l'al-go-rithme mis en oeuvre. Illus-trer sur un ex
emple di-dac-tique (pour-suivre avec l'exemple
 []

LaTeX Font Info:    Try loading font information for OT1+zi4 on input line 135.

("B:\Program Files (x86)\Miktex 2.9\tex/latex/inconsolata\ot1zi4.fd"
File: ot1zi4.fd 2018/01/14 OT1/zi4 (Inconsolata)
)
LaTeX Font Info:    Font shape `OT1/zi4/m/n' will be
(Font)              scaled to size 10.0pt on input line 135.
LaTeX Font Info:    Font shape `OT1/zi4/m/n' will be
(Font)              scaled to size 9.0pt on input line 136.
LaTeX Font Info:    Font shape `OT1/zi4/bx/n' in size <10> not available
(Font)              Font shape `OT1/zi4/b/n' tried instead on input line 136.
LaTeX Font Info:    Font shape `OT1/zi4/b/n' will be
(Font)              scaled to size 10.0pt on input line 136.

! You can't use `macro parameter character #' in horizontal mode.
l.164 ...======================================= #
                                                  
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (178.74887pt too wide) in paragraph at lines 164--165
\OT1/cmss/m/n/10 ==============================================================
============= 
 []

! Missing $ inserted.
<inserted text> 
                $
l.167 ..._condition= zeros(Bool, m) #si desactive_
                                                  condition[j]=0 la ligne se...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


LaTeX Warning: Command \' invalid in math mode on input line 167.

! Please use \mathaccent for accents in math mode.
\add@accent ...@spacefactor \spacefactor }\accent 
                                                  #1 #2\egroup \spacefactor ...
l.167 ...desactive_condition[j]=0 la ligne sera é
                                                  valué
I'm changing \accent to \mathaccent here; wish me luck.
(Accents are not the same in formulas as they are in text.)

! You can't use `\spacefactor' in math mode.
\add@accent ...}\accent #1 #2\egroup \spacefactor 
                                                  \accent@spacefactor 
l.167 ...desactive_condition[j]=0 la ligne sera é
                                                  valué
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


LaTeX Warning: Command \' invalid in math mode on input line 167.

! Please use \mathaccent for accents in math mode.
\add@accent ...@spacefactor \spacefactor }\accent 
                                                  #1 #2\egroup \spacefactor ...
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I'm changing \accent to \mathaccent here; wish me luck.
(Accents are not the same in formulas as they are in text.)

! You can't use `\spacefactor' in math mode.
\add@accent ...}\accent #1 #2\egroup \spacefactor 
                                                  \accent@spacefactor 
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
<recently read> \egroup 
                        
l.167 ...ive_condition[j]=0 la ligne sera évalué
                                                  
(That makes 100 errors; please try again.) 
Here is how much of TeX's memory you used:
 4984 strings out of 492946
 70026 string characters out of 3132896
 188390 words of memory out of 3000000
 8849 multiletter control sequences out of 15000+200000
 5466 words of font info for 21 fonts, out of 3000000 for 9000
 1141 hyphenation exceptions out of 8191
 34i,5n,72p,255b,1258s stack positions out of 5000i,500n,10000p,200000b,50000s

No pages of output.
